#####
# Versión mejorada
#####

import cv2
import cv2.aruco as aruco
import numpy as np
import time
import math

pos_rock = []
d_rock = {}
pos_red = []
pos_green = []
d_green = {}
pos_blue = []

#---------------------------------------------------------------------------------------------------------------
#----------- ROTATIONS https://www.learnopencv.com/rotation-matrix-to-euler-angles/
#---------------------------------------------------------------------------------------------------------------
# Checks if a matrix is a valid rotation matrix > y <

def isRotationMatrix(R):
	Rt = np.transpose(R)
	shouldBeIdentity = np.dot(Rt, R)
	I = np.identity(3, dtype=R.dtype)
	n = np.linalg.norm(I - shouldBeIdentity)
	return n < 1e-6
	
def rotationMatrixToEulerAngles(R):
	assert (isRotationMatrix(R))
	
	sy = math.sqrt(R[0, 0] * R[0, 0] + R[1,0] * R[1,0])
	singular = sy < 1e-6
	
	if not singular:
		x = math.atan2(R[2,1], R[2,2])
		y = math.atan2(-R[2,0], sy)
		z = math.atan2(R[1,0], R[0,0])
	else:
		x = math.atan2(-R[1,2], R[1,1])
		y = math.atan2(-R[2,0], sy)
		z = 0	
		
	return np.array([x,y,z])




####
prev_frame_time = time.time()

cal_image_count = 0
frame_count = 0
####


marker_size = 66

with open('assets/camera_cal.npy', 'rb') as f:
	camera_matrix = np.load(f)
	camera_distortion = np.load(f)
	
aruco_dict = aruco.getPredefinedDictionary(aruco.DICT_4X4_250)

cap = cv2.VideoCapture(0)


camera_width = 640
camera_height = 480
camera_frame_rate = 40

cap.set(2, camera_width)
cap.set(4, camera_height)
cap.set(5, camera_frame_rate)




while True:
	
	ret, frame = cap.read()

	gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

	corners, ids, rejected = aruco.detectMarkers(gray, aruco_dict, camera_matrix, camera_distortion)
	

	if ids is not None and [47, 13, 36, 17] in ids:
	#if ids is not None and ids[0] == 32:   MAL OSTIA ESTÁS PUTO CIEGO JODERRRR
		print('ids')
		print(ids)
		
		for i in range(len(ids)):

			
			if ids[i] == [17]:
				color = 0
				pos = np.where(ids==[17])[0][0]
				for i,x in enumerate(ids):
					if x==17:
						pos_rock.append(i)
						
				
			elif ids[i] == [47]:
				
				pos = np.where(ids==[47])[0][0]
								
							
				for i,x in enumerate(ids):
					if x==47:
						pos_red.append(i)
				
				
			elif ids[i] == [36]:
				
				pos = np.where(ids==[36])[0][0]
				
				for i,x in enumerate(ids):
					if x==36:
						pos_green.append(i)
				print(pos_green)
				
			
			elif ids[i] == [13]:
				
				pos = np.where(ids==[13])[0][0]
				
				for i,x in enumerate(ids):
					if x==13:
						pos_blue.append(i)
				


					
		#print("corners")
		#print(corners)
		
		#print("frame")
		#print(frame)
		#pos = np.where(ids==[32])[0][0]
		
		

		
		
		aruco.drawDetectedMarkers(frame, corners)
		

		#print('rvec')
		#print(rvec)
		
	
    
    
		rvec_list_all, tvec_list_all, _objPoints = aruco.estimatePoseSingleMarkers(corners, marker_size, camera_matrix, camera_distortion)
		print('tvec_list_all')
		print(tvec_list_all)

		rvec = rvec_list_all[pos][0]
		tvec = tvec_list_all[pos][0]

		if color == 0:
			
			
			for i,x in enumerate(pos_rock):
				
				#d_rock['rvec_rk_' + str(i)] = rvec_list_all[x]
				rvec_rk = rvec_list_all[x][0]
				tvec_rk = tvec_list_all[x][0]
				print('tvec_rk')
            

        
				
				
			
				#d_rock['coordenadas_roca_' + str(i)] = (d_rock['tvec_rk_'+str(i)[0], 'tvec_rk_'+str(i)[1], 'tvec_rk_'+str(i)[2]])
				#d_rock['coordenadas_roca_' + str(i)] = (tvec_rk[0], tvec_rk[1], tvec_rk[2]) 
				coordenadas_roca_ = (tvec_rk[0], tvec_rk[1], tvec_rk[2]) 
				
				aaa = 'tvec_rk_%s'%i
				print(coordenadas_roca_)

			aruco.drawAxis(frame, camera_matrix, camera_distortion, rvec_rk, tvec_rk, 100)
			#coordenadas_roca = (tvec_0[0], tvec_0[1], tvec_0[2])
			
			print('pos')
			print(pos)
		
			print('pos_rock')
			print(pos_rock)
			print(pos_rock[i])
				
		
		new_frame_time = time.time()
		fps = 1/(new_frame_time - prev_frame_time)
		prev_frame_time = new_frame_time
		cv2.putText(frame, 'FPS ' + str(int(fps)), (10,40), cv2.FONT_HERSHEY_PLAIN, 3, (100,255,0), 2, cv2.LINE_AA)
		
		
	cv2.imshow('frame', frame)
		
	key = cv2.waitKey(1) & 0xFF
	if key == ord('q'): break
	
cap.release()
cv2.destroyAllWindows()
	
	
#https://stackoverflow.com/questions/1060090/changing-variable-names-with-python-for-loops

